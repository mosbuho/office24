<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kh.backend.mapper.MemberMapper">
    <insert id="insertMember" parameterType="com.kh.backend.model.Member"> INSERT INTO member (id,
        pw, name, phone, email, birth, gender) VALUES (#{id}, #{pw}, #{name}, #{phone}, #{email},
        #{birth}, #{gender}) </insert>

    <select id="findById" parameterType="String" resultType="com.kh.backend.model.Member"> SELECT
        no, pw FROM member WHERE id = #{id} </select>

    <select id="findByEmail" parameterType="String" resultType="com.kh.backend.model.Member">
        SELECT * FROM member WHERE email = #{email} </select>

    <select id="findByPhone" parameterType="String" resultType="com.kh.backend.model.Member">
        SELECT * FROM member WHERE phone = #{phone} </select>

    <select id="findByIdAndPhone" parameterType="map" resultType="com.kh.backend.model.Member">
        SELECT * FROM member WHERE id = #{id} AND phone = #{phone} </select>

    <select id="findIdByPhone" parameterType="String" resultType="String"> SELECT id FROM member
        WHERE trim(phone) = #{phone} </select>

    <update id="resetPw"> UPDATE member SET pw = #{pw} WHERE id = #{id} </update>

    <select id="getAllMembers" resultType="map"> SELECT * FROM ( SELECT m.*, ROWNUM rnum FROM (
        SELECT no, id, name, phone, email, birth, gender, reg_date FROM member <if
            test="f != null and q != null"> WHERE ${f} LIKE '%' || #{q} || '%' </if> ORDER BY no ) m
        WHERE ROWNUM &lt;= #{end} ) WHERE rnum >= #{start} </select>

    <select id="getTotalMemberCount" resultType="int"> SELECT COUNT(*) FROM member <if
            test="f != null and q != null"> WHERE ${f} LIKE '%' || #{q} || '%' </if>
    </select>

    <update id="resetMemberPw"> UPDATE member SET pw =
        '$2a$10$v6N1KZmqox/VYBcmvLMzie359WZ1.3PQ0f8aJOtghk0Od0gdwGSDu' WHERE no = #{no} </update>

    <update id="updateMember" parameterType="com.kh.backend.model.Member"> UPDATE member SET name =
        #{name}, phone = #{phone}, email = #{email}, birth = #{birth}, gender = #{gender} WHERE no =
        #{no} </update>

    <delete id="deleteMember"> DELETE FROM member WHERE no = #{no} </delete>

    <select id="getMemberById" resultType="com.kh.backend.model.Member"> SELECT * FROM member WHERE
        no = #{no} </select>

    <update id="updateMemberProfile" parameterType="com.kh.backend.model.Member"> UPDATE member SET
        UPDATE member SET name = #{name}, phone = #{phone}, email = #{email}, birth = #{birth} WHERE
        no = #{no} </update>

    <update id="updatePassword"> UPDATE member SET pw = #{newPassword} WHERE no = #{no} </update>

    <select id="checkLikeExists" resultType="boolean"> SELECT CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0
        END FROM wish WHERE member_no = #{userNo} AND office_no = #{officeNo} </select>

    <insert id="addLike"> INSERT INTO wish (member_no, office_no) VALUES (#{userNo}, #{officeNo}) </insert>

    <delete id="removeLike"> DELETE FROM wish WHERE member_no = #{userNo} AND office_no =
        #{officeNo} </delete>

    <select id="getLikeCount" resultType="int"> SELECT COUNT(*) FROM wish WHERE office_no =
        #{officeNo} </select>

    <select id="getLikedOfficeNumbers" resultType="java.lang.Integer"> SELECT OFFICE_NO FROM WISH
        WHERE MEMBER_NO = #{userNo} </select>

    <select id="getFavoriteOffices" parameterType="int" resultType="map"> SELECT o.NO, o.TITLE,
        o.ADDRESS as LOCATION, o.PRICE as PRICEPERDAY, o.TITLE_IMG as OFFICEIMGURL,
        NVL(AVG(r.RATING), 0) as RATING FROM OFFICE o JOIN WISH w ON o.NO = w.OFFICE_NO LEFT JOIN
        REVIEW r ON o.NO = r.OFFICE_NO WHERE w.MEMBER_NO = #{userNo} GROUP BY o.NO, o.TITLE,
        o.ADDRESS, o.PRICE, o.TITLE_IMG </select>
</mapper>